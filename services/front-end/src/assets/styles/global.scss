@use '@angular/material' as mat;
@import './variables';
@import './fonts.scss';

@include mat.core();

$darkBlueTextColorRamp: (
  50: #e6f2f6,
  100: #c3deeb,
  200: #a1c9de,
  300: #84b4d0,
  400: #70a5c6,
  500: #334d6e,
  600: #568ab2,
  700: #4b79a1,
  800: #42698f,
  900: #334d6e,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$app-primary: mat.define-palette(mat.$blue-palette);
$app-dark: mat.define-palette(mat.$grey-palette);
$app-accent: mat.define-palette($darkBlueTextColorRamp);

// The warn palette is optional (defaults to red).
$app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$app-theme: mat.define-light-theme((
  color: (
    primary: $app-primary,
    accent: $app-accent,
    warn: $app-warn,
    dark: $app-dark
  ),
  typography: mat.define-typography-config(
    $font-family: 'Poppins'
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($app-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: 'Poppins', "Helvetica Neue", sans-serif;
  background-color: rgb(246, 246, 246);
  color: var(--color-neutral);
}
